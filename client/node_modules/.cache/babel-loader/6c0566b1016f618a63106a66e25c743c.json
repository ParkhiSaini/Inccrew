{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './reducer';\nexport const history = createBrowserHistory(); // combineReducers will be handled internally by configureStore\n\nconst preloadedState = {};\nexport const store = configureStore({\n  middleware: [thunk, routerMiddleware(history)],\n  reducer: rootReducer(history),\n  preloadedState\n});","map":{"version":3,"names":["configureStore","routerMiddleware","connectRouter","createBrowserHistory","thunk","rootReducer","history","preloadedState","store","middleware","reducer"],"sources":["D:/mern-auth/server/client/src/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport { routerMiddleware, connectRouter } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from './reducer';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\n// combineReducers will be handled internally by configureStore\r\n\r\n\r\nconst preloadedState = {};\r\nexport const store = configureStore({\r\n  middleware: [thunk, routerMiddleware(history)],\r\n  reducer: rootReducer(history),\r\n  preloadedState,\r\n});"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,wBAAhD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,WAA5B;AAEA,OAAO,MAAMC,OAAO,GAAGH,oBAAoB,EAApC,C,CAEP;;AAGA,MAAMI,cAAc,GAAG,EAAvB;AACA,OAAO,MAAMC,KAAK,GAAGR,cAAc,CAAC;EAClCS,UAAU,EAAE,CAACL,KAAD,EAAQH,gBAAgB,CAACK,OAAD,CAAxB,CADsB;EAElCI,OAAO,EAAEL,WAAW,CAACC,OAAD,CAFc;EAGlCC;AAHkC,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}