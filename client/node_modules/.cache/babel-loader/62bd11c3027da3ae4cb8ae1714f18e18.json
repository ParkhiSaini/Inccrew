{"ast":null,"code":"import { applyMiddleware, compose } from \"redux\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\nconst initialState = {};\nconst middleware = [thunk];\nconst store = configureStore({\n  reducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\n  devTools: process.env.NODE_ENV !== 'production',\n  preloadedState,\n  enhancers: [batchedSubscribe(debounceNotify)]\n});\nexport default store;","map":{"version":3,"names":["applyMiddleware","compose","configureStore","thunk","rootReducer","initialState","middleware","store","reducer","getDefaultMiddleware","concat","logger","devTools","process","env","NODE_ENV","preloadedState","enhancers","batchedSubscribe","debounceNotify"],"sources":["D:/mern-auth/server/client/src/store.js"],"sourcesContent":["import {  applyMiddleware, compose } from \"redux\";\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  preloadedState,\r\n  enhancers: [batchedSubscribe(debounceNotify)],\r\n})\r\nexport default store;"],"mappings":"AAAA,SAAUA,eAAV,EAA2BC,OAA3B,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,YAAxB;AACA,MAAMC,YAAY,GAAG,EAArB;AACA,MAAMC,UAAU,GAAG,CAACH,KAAD,CAAnB;AAEA,MAAMI,KAAK,GAAGL,cAAc,CAAC;EAC3BM,OAD2B;EAE3BF,UAAU,EAAGG,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BC,MAA9B,CAFX;EAG3BC,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAHR;EAI3BC,cAJ2B;EAK3BC,SAAS,EAAE,CAACC,gBAAgB,CAACC,cAAD,CAAjB;AALgB,CAAD,CAA5B;AAOA,eAAeZ,KAAf"},"metadata":{},"sourceType":"module"}